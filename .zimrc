# Start configuration added by Zim install {{{
#
# This is not sourced during shell startup, and it's only used to configure the
# zimfw plugin manager.
#

#
# Modules
#

# Sets sane Zsh built-in environment options.
zmodule environment
# Provides handy git aliases and functions.
zmodule git
# Applies correct bindkeys for input events.
zmodule input
# Sets a custom terminal title.
zmodule termtitle
# Utility aliases and functions. Adds colour to ls, grep and less.
zmodule utility

#
# Optimization
#

zmodule mroth/evalcache -d
zmodule romkatv/zsh-defer -d

#
# Prompt
#

# Exposes to prompts how long the last command took to execute, used by asciiship.
zmodule duration-info
# Exposes git repository status information to prompts, used by asciiship.
zmodule git-info
# Powerline10k Instant Prompt
zmodule romkatv/powerlevel10k
# A heavily reduced, ASCII-only version of the Spaceship and Starship prompts.
zmodule asciiship
# zmodule ohmyzsh/ohmyzsh --root themes --source robbyrussell.zsh-theme

#
# Completion
#

# Additional completion definitions for Zsh.
zmodule zsh-users/zsh-completions --fpath src
# Enables and configures smart and extensive tab completion.
# completion must be sourced after all modules that add completion definitions.
zmodule completion


#
# Modules that must be initialized last
#

# Fish-like syntax highlighting for Zsh.
# zsh-users/zsh-syntax-highlighting must be sourced after completion
#_as_temp()
#{
#	local file=$(mktemp)
#	cat > "$file"
#	echo -n "$file"
#}
#_dir=$HOME/.zim/modules/zsh-syntax-highlighting
#_path=$_dir/zsh-syntax-highlighting.zsh
#_raw(){ echo -n "$1" | sed -E 's/([][().*?+^$|{}\/])/\\\1/g'; }
#_replace_once(){ sed -E "/^#/b; /$(_raw "$1")/!b; h; s/^/#/;p; g; s/$(_raw "$1")/$(_raw "$2")/g;" "$3"; }
#_as_file()
#{
#	local file="$1"; shift
#	if ! [ -f "$file" ]; then
#		"$@" > "$file"
#	fi
#	echo -n "$file"
#}


_as_temp()
{
	local file
	file=$(mktemp "$@")
	cat > "$file"
	echo -n "$file"
}

_as_module_file()
{
	[[ "$1" ]] || { echo ERROR: no input; exit 1; }
	local module=$1
	local filename=$2	

	local dir=$ZIM_HOME/modules/zimrc/$module
	mkdir -p $dir

	#local file=$dir/$filename
	#[[ "$2" ]] || file=$(mktemp -pu $dir)
	#${ZDOTDIR:-${HOME}}
	local file=$dir/${filename:-$(mktemp -up . -t zimrc.XXX)}

	cat > $file
	echo -n $file
}

# zmodule dracula/zsh-syntax-highlighting --name dracula --source zsh-syntax-highlighting.sh

#zmodule zsh-users/zsh-syntax-highlighting --on-pull "source $(_as_temp << "EOF"
#	_raw(){	echo -n "$1" | sed -E 's/([][().*?+^$|{}\/])/\\\1/g'; }
#	_replace_once(){ _1="$(_raw "$1")"; grep -Eq "^[^#].*$_1" "$3" &>/dev/null && sed -Ei "/^#/b; /$_1/!b; h; s/^/#/;p; g; s/$_1/$(_raw "$2")/g;" "$3"; }
#	_path="${HOME}/.zim/modules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
#	_replace_once '($1/*/(/))' '($(bash -c "echo $1/*/"))' "$_path"
#EOF
#)"

zmodule z-shell/F-Sy-H --on-pull "source $(_as_module_file F-Sy-H on-pull.zsh << "EOF"
	source F-Sy-H.plugin.zsh
	_theme=mcgi
	[ -f $HOME/.f-sy-h/$_theme.ini ] && {
		fast-theme HOME:$_theme
	} || echo $_theme theme not found
EOF
)" --source F-Sy-H.plugin.zsh --source $(_as_module_file F-Sy-H user.zsh << "EOF"
	_fsyh_themes_tried=()
	fsyh-next-theme()
	{
		_list(){ cd $1 && find *.ini | sed -E "s/^(.*).ini/${2:+$2:}\1/" }
		local _themes=($(
			_list $ZIM_HOME/modules/F-Sy-H/themes
			_list $HOME/.config/f-sy-h CONFIG
			_list $HOME/.cache/f-sy-h CACHE
			_list $HOME/.f-sy-h HOME
		)) 2>/dev/null
		local _untried_theme _theme _i
		for _i in $(seq ${#_themes[@]} | shuf); do
			_theme=${_themes[_i]}
			[[ " ${_fsyh_themes_tried[@]} " =~ " $_theme " ]] || {
				_untried_theme=$_theme
			}
		done
		[[ "$_untried_theme" ]] || {
			_untried_theme=$_theme
			_fsyh_themes_tried=()
		}
		_fsyh_themes_tried+=($_theme)
		fast-theme $_theme &>/dev/null
		fast-theme -s
		fast-theme "$@" $_theme
	}
EOF
)
# Fish-like history search (up arrow) for Zsh.
# zsh-users/zsh-history-substring-search must be sourced after zsh-users/zsh-syntax-highlighting
zmodule zsh-users/zsh-history-substring-search

# Apply Vim mode
# zmodule jeffreytse/zsh-vi-mode
# zmodule softmoth/zsh-vim-mode

# Fish-like autosuggestions for Zsh.
zmodule zsh-users/zsh-autosuggestions

# }}} End configuration added by Zim install


