# Start configuration added by Zim install {{{
#
# This is not sourced during shell startup, and it's only used to configure the
# zimfw plugin manager.
#

#
# Modules
#

# Sets sane Zsh built-in environment options.
zmodule environment
# Provides handy git aliases and functions.
zmodule git
# Applies correct bindkeys for input events.
zmodule input
# Sets a custom terminal title.
zmodule termtitle
# Utility aliases and functions. Adds colour to ls, grep and less.
zmodule utility


#
# Optimization
#

zmodule mroth/evalcache -d
zmodule romkatv/zsh-defer -d

#
# Prompt
#

# Exposes to prompts how long the last command took to execute, used by asciiship.
zmodule duration-info
# Exposes git repository status information to prompts, used by asciiship.
zmodule git-info
# A heavily reduced, ASCII-only version of the Spaceship and Starship prompts.
#zmodule asciiship
# Powerline10k Instant Prompt
zmodule romkatv/powerlevel10k
# zmodule ohmyzsh/ohmyzsh --root themes --source robbyrussell.zsh-theme

#
# Completion
#

# Additional completion definitions for Zsh.
zmodule zsh-users/zsh-completions --fpath src
# Enables and configures smart and extensive tab completion.
# completion must be sourced after all modules that add completion definitions.
zmodule completion


#
# Modules that must be initialized last
#

# Fish-like syntax highlighting for Zsh.
# zsh-users/zsh-syntax-highlighting must be sourced after completion
#_as_temp()
#{
#	local file=$(mktemp)
#	cat > "$file"
#	echo -n "$file"
#}
#_dir=$HOME/.zim/modules/zsh-syntax-highlighting
#_path=$_dir/zsh-syntax-highlighting.zsh
#_raw(){ echo -n "$1" | sed -E 's/([][().*?+^$|{}\/])/\\\1/g'; }
#_replace_once(){ sed -E "/^#/b; /$(_raw "$1")/!b; h; s/^/#/;p; g; s/$(_raw "$1")/$(_raw "$2")/g;" "$3"; }
#_as_file()
#{
#	local file="$1"; shift
#	if ! [ -f "$file" ]; then
#		"$@" > "$file"
#	fi
#	echo -n "$file"
#}


_as_temp()
{
	local file
	file=$(mktemp)
	cat > "$file"
	echo -n "$file"
}

zmodule zsh-users/zsh-syntax-highlighting --on-pull "source $(_as_temp << "EOF"
	_raw()
	{
		echo -n "$1" | sed -E 's/([][().*?+^$|{}\/])/\\\1/g';
	}
	_replace_once()
	{
		_1="$(_raw "$1")"
		if grep -Eq "^[^#].*$_1" "$3" &>/dev/null; then
			sed -Ei "/^#/b; /$_1/!b; h; s/^/#/;p; g; s/$_1/$(_raw "$2")/g;" "$3";
		fi
	}
	_dir="${HOME}/.zim/modules/zsh-syntax-highlighting"
	_path="$_dir/zsh-syntax-highlighting.zsh"
	_replace_once '($1/*/(/))' '($(bash -c "echo $1/*/"))' "$_path"
EOF
)"
#zmodule zsh-users/zsh-syntax-highlighting --source $(_as_file $_dir/_init.zsh << EOF
#	$(declare -p _dir _path)
#	$(declare -f _raw _replace_once _as_file)
#	#_path=$_dir/zsh-syntax-highlighting.zsh
#	source $(_as_file $_path.fixed _replace_once '($1/*/(/))' '($(bash -c "echo $1/*/"))' $_path)
#EOF
#)
# zmodule zsh-users/fast-syntax-highlighting

# Fish-like history search (up arrow) for Zsh.
# zsh-users/zsh-history-substring-search must be sourced after zsh-users/zsh-syntax-highlighting
zmodule zsh-users/zsh-history-substring-search

# Apply Vim mode
# zmodule jeffreytse/zsh-vi-mode
# zmodule softmoth/zsh-vim-mode

# Fish-like autosuggestions for Zsh.
zmodule zsh-users/zsh-autosuggestions

# }}} End configuration added by Zim install

